% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SQL_stat_gen1.R
\encoding{UTF-8}
\name{SQL_stat_gen1}
\alias{SQL_stat_gen1}
\title{Astuce}
\usage{
SQL_stat_gen1(
  conn = NULL,
  debut,
  fin,
  type_Rx = "DENOM",
  codes,
  group_by = "DENOM",
  code_serv = c("1", "AD"),
  code_serv_filtre = "Exclusion",
  code_list = NULL,
  code_list_filtre = "Inclusion",
  age_date = NULL
)
}
\arguments{
\item{conn}{Variable contenant la connexion entre R et Teradata. Voir \code{\link{SQL_connexion}}.}

\item{debut}{Vecteur contenant la ou les dates de début des périodes d'étude au format \code{AAAA-MM-JJ}.}

\item{fin}{Vecteur contenant la ou les dates de fin des périodes d'étude au format \code{AAAA-MM-JJ}.}

\item{type_Rx}{Type de code à analyser. Une valeur parmi :
\itemize{
\item \code{'AHFS'} : Code identifiant la classe de médicaments telle que déterminée par l'\emph{American Hospital Formulary Service}.
\item \code{'DENOM'} : Code de dénomination commune.
\item \code{'DIN'} : Code d'identification du médicament.
}}

\item{codes}{Le ou les codes à analyser. Voir \emph{Details}.}

\item{group_by}{Équivalent du \emph{group by} SQL. Regrouper (aggréger) les résultats par :
\itemize{
\item \code{'AHFS'} : Code identifiant la classe de médicaments telle que déterminée par l'\emph{American Hospital Formulary Service}.
\item \code{'DENOM'} : Code de dénomination commune.
\item \code{'DIN'} : Code d'identification du médicament.
\item \code{'CodeList'} : Code de catégorie de liste de médicament.
\item \code{'CodeServ'} : Code de service.
\item \code{'Teneur'} : Teneur du médicament.
\item \code{'Format'} : Format d'acquisition du médicament.
\item \code{'Age'} : Âge à une date précise. Combiner avec l'argument \code{age_date}.
}}

\item{code_serv}{Le ou les codes de services à exclure ou inclure, sinon inscrire \code{NULL}. \code{character}.}

\item{code_serv_filtre}{\code{'Exclusion'} ou \code{'Inclusion'} des codes de services.}

\item{code_list}{Le ou les codes de catégorie de listes de médicaments à exclure ou inclure, sinon inscrire \code{NULL}. \code{character}.}

\item{code_list_filtre}{\code{'Exclusion'} ou \code{'Inclusion'} des codes de catégories de listes de médicaments.}

\item{age_date}{Date à laquelle on calcul l'âge des individus. À utiliser seulement si \code{group_by} contient \code{'Age'}.}
}
\value{
\code{data.table}
}
\description{
inesss v.1.0.0.9001\cr\cr
Statistiques d'un ou de plusieurs codes de médicaments selon certains critères.\cr
Vue utilisée : \code{\href{http://intranet/eci/ECI2/ASP/ECI2P04_DescVue.asp?Envir=PROD&NoVue=1823&NomVue=V\%5FDEM\%5FPAIMT\%5FMED\%5FCM+\%28DEMANDES+DE+PAIEMENT+\%2D+PROGRAMME+\%ABMEDICAMENT\%BB\%29}{V_DEM_PAIMT_MED_CM}}.
}
\details{
\strong{debut, fin :}\cr
\code{debut} et \code{fin} doivent contenir le même nombre de valeurs.\cr\cr
\strong{codes :}\cr
Si \code{type_Rx='AHFS'} : codes sous la forme de 6 caractères où les deux premiers caractères représente la classe AHFS, les deux du milieu la sous-classe AHFS et les deux derniers la sous-sous-classe AHFS. Il est possible de remplacer une paire de caractères (\{1, 2\}, \{3, 4\} ou \{5, 6\}) par \code{'--'} pour rechercher toutes les types de classes. Par exemple, \code{'04--12'} indique qu'on recherche la classe AHFS 04, toutes les sous-classes AHFS et la sous-sous-classe 12.\cr
Sinon : inscrire les codes sous la forme d'un nombre entier.\cr\cr
\strong{code_serv_filtre, code_list_filtre :}\cr
\code{'Exclusion'} inclus les \code{NULL}\cr
\code{'Inclusion'} exclus les \code{NULL}.\cr\cr
\strong{Nom des médicaments :}\cr
Que ce soit pour les codes AHFS (\code{NOM_AHFS}), les DENOM (\code{NOM_DENOM}) ou les DIN (\code{NOM_MARQ_COMRC}), \strong{le nom inscrit est toujours celui le plus récent}.
}
\examples{
\donttest{
conn <- SQL_connexion()

### group_by
# Aucun
ex01 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'DENOM', codes = c(39, 47092, 47135), group_by = NULL
)
# Tous les group_by
ex02 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'DENOM', codes = c(39, 47092, 47135),
  group_by = c('AHFS', 'DENOM', 'DIN', 'CodeList', 'CodeServ', 'Teneur', 'Format', 'Age')
)

### AHFS
ex03 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'AHFS', codes = c('04----', '08--12', '122426'), group_by = 'AHFS'
)

### DENOM
ex04 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'DENOM', codes = c(39, 47092, 47135), group_by = c('DENOM', 'DIN')
)

### DIN
ex05 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'DIN', codes = c(30848, 585092), group_by = 'DIN'
)

### Age
ex06 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'DIN', codes = c(30848, 585092), group_by = c('DIN', 'Age'), age_date = '2018-01-01'
)

### Exclusion et Inclusion code_serv et code_list
ex07 <- SQL_stat_gen1(
  conn, debut = c('2018-01-01', '2019-01-01'), fin = c('2018-12-31', '2019-12-31'),
  type_Rx = 'DENOM', codes = c(39, 47092, 47135), group_by = 'DENOM',
  code_serv = c('1', 'AD'), code_serv_filtre = 'Exclusion',
  code_list = c('40', '41'), code_list_filtre = 'Inclusion'
)
}
}
